<?php/** Tell WordPress to run promocode_setup() when the 'after_setup_theme' hook is run. */add_action( 'after_setup_theme', 'promocode_setup' );if ( ! function_exists( 'promocode_setup' ) ):function promocode_setup() {	// This theme styles the visual editor with editor-style.css to match the theme style.	add_editor_style();	
	// This theme uses post thumbnails	add_theme_support( 'post-thumbnails' );
	// Add default posts and comments RSS feed links to head	add_theme_support( 'automatic-feed-links' );
	// Make theme available for translation	load_theme_textdomain( 'promocode', TEMPLATEPATH . '/languages' );	$locale = get_locale();	$locale_file = TEMPLATEPATH . "/languages/$locale.php";	if ( is_readable( $locale_file ) )		require_once( $locale_file );
	// This theme uses wp_nav_menu() in one location.	register_nav_menus( array(		'primary' => __( 'Навигация в заголовке', 'promocode' ),	) );		register_nav_menus( array( 	'saidebar_menu' => __( 'Навигация в сайдбаре' ), 	) );		register_nav_menus( array( 	'main_menu' => __( 'Основная навигация слева' ), 	) );		register_nav_menus( array( 	'right_menu' => __( 'Основная навигация справа' ), 	) );
}
endif;
if ( ! function_exists( 'promocode_admin_header_style' ) ) :
function promocode_admin_header_style() {
?><style type="text/css">
#headimg {	border-bottom: 1px solid #000;	border-top: 4px solid #000;}</style>
<?php}endif;function promocode_page_menu_args( $args ) {	$args['show_home'] = true;	return $args;}
add_filter( 'wp_page_menu_args', 'promocode_page_menu_args' );function promocode_continue_reading_link() {   }
function promocode_auto_excerpt_more( $more ) {
	return '' . promocode_continue_reading_link();
}
add_filter( 'excerpt_more', 'promocode_auto_excerpt_more' );
function promocode_custom_excerpt_more( $output ) {
	if ( has_excerpt() && ! is_attachment() ) {}
	return $output;
}
add_filter( 'get_the_excerpt', 'promocode_custom_excerpt_more' );
function promocode_remove_gallery_css( $css ) {
	return preg_replace( "#<style type='text/css'>(.*?)</style>#s", '', $css );
}add_filter( 'gallery_style', 'promocode_remove_gallery_css' );add_action( 'widgets_init', 'promocode_widgets_init' );
function promocode_widgets_init() {
	// Area 1, located at the top of the sidebar.
	register_sidebar( array(		'name' => __( 'Первый виджет на сайте', 'promocode' ),		'id' => 'primary-widget-area',		'description' => __( 'Первый виджет на сайте', 'promocode' ),		'before_widget' => '<div id="%1$s" class="widget %2$s">',		'after_widget' => '</div>',		'before_title' => '<div class="widget-title h2">',		'after_title' => '</div>',	) );		register_sidebar( array(		'name' => __( 'Сайдбар в разделе товаров', 'promocode' ),		'id' => 'product-widget-area',		'description' => __( 'Сайдбар в разделе товаров', 'promocode' ),		'before_widget' => '<div id="%1$s" class="widget %2$s">',		'after_widget' => '</div>',		'before_title' => '<div class="widget-title">',		'after_title' => '</div>',	) );		register_sidebar( array(		'name' => __( 'Сайдбар в разделе скидок', 'promocode' ),		'id' => 'discount-widget-area',		'description' => __( 'Сайдбар в разделе скидок', 'promocode' ),		'before_widget' => '<div id="%1$s" class="widget %2$s">',		'after_widget' => '</div>',		'before_title' => '<div class="widget-title">',		'after_title' => '</div>',	) );		register_sidebar( array(		'name' => __( 'Первый виджет в блоге', 'promocode' ),		'id' => 'primary-blog-widget',		'description' => __( 'Виджет в блоге', 'promocode' ),		'before_widget' => '<div id="%1$s" style="background: #ffffff;" class="widget %2$s">',		'after_widget' => '</div>',		'before_title' => '<div class="widget-title">',		'after_title' => '</div>',	) );		register_sidebar( array(		'name' => __( 'Второй виджет в блоге', 'promocode' ),		'id' => 'secondary-blog-widget',		'description' => __( 'Второй виджет в блоге', 'promocode' ),		'before_widget' => '<div id="%1$s" class="widget %2$s">',		'after_widget' => '</div>',		'before_title' => '<div class="widget-title">',		'after_title' => '</div>',	) );		// Регистрируем виджеты для футера		register_sidebar( array(		'name' => __( 'Виджет в футере для сайта', 'promocode' ),		'id' => 'primary-footer-widget',		'description' => __( 'Первый виджет в футере', 'promocode' ),		'before_widget' => '<div id="%1$s" class="widget %2$s">',		'after_widget' => '</div>',		'before_title' => '<div class="widget-title">',		'after_title' => '</div>',	) );		register_sidebar( array(		'name' => __( 'Второй виджет в футере', 'promocode' ),		'id' => 'secondary-footer-widget',		'description' => __( 'Второй виджет в футере', 'promocode' ),		'before_widget' => '<div id="%1$s" class="widget %2$s">',		'after_widget' => '</div>',		'before_title' => '<div class="widget-title">',		'after_title' => '</div>',	) );		register_sidebar( array(		'name' => __( 'Третий виджет в футере', 'promocode' ),		'id' => 'third-footer-widget',		'description' => __( 'Третий виджет в футере', 'promocode' ),		'before_widget' => '<div id="%1$s" class="widget %2$s">',		'after_widget' => '</div>',		'before_title' => '<div class="widget-title">',		'after_title' => '</div>',	) );		register_sidebar( array(		'name' => __( 'Виджет в футере для блога', 'promocode' ),		'id' => 'forth-footer-widget',		'description' => __( 'Виджет в футере для блога', 'promocode' ),		'before_widget' => '<div id="%1$s" class="widget %2$s">',		'after_widget' => '</div>',		'before_title' => '<div class="widget-title">',		'after_title' => '</div>',	) );		
add_action( 'widgets_init', 'promocode_widgets_init' );}//add_filter ('pre_comment_content','code_in_comments');remove_action( 'wp_head', 'wp_generator' );remove_action( 'wp_head', 'feed_links_extra', 3 ); remove_action( 'wp_head', 'feed_links', 2 );remove_action( 'wp_head', 'rsd_link' );remove_action( 'wp_head', 'wlwmanifest_link' );remove_action( 'wp_head', 'index_rel_link' );remove_action( 'wp_head', 'parent_post_rel_link', 10, 0 ); remove_action( 'wp_head', 'start_post_rel_link', 10, 0 );remove_action( 'wp_head', 'adjacent_posts_rel_link', 10, 0 );function new_excerpt_length($length) {	return 35; }add_filter('excerpt_length', 'new_excerpt_length');function kama_disable_inner_ping( &$links ){	$site_url = get_option( 'home' );	foreach ( $links as $key => $val )		if ( strpos( $val, $site_url ) !== false ) unset($links[$key]);}add_action( 'pre_ping', 'kama_disable_inner_ping' );/* Удаление виджетов из Консоли WordPress */function clear_dash(){	$side = &$GLOBALS['wp_meta_boxes']['dashboard']['side']['core'];	$normal = &$GLOBALS['wp_meta_boxes']['dashboard']['normal']['core'];	unset($side['dashboard_quick_press']); //Быстрая публикация	unset($side['dashboard_recent_drafts']); //Полседние черновики	unset($side['dashboard_primary']); //Блог WordPress	unset($side['dashboard_secondary']); //Другие Нновости WordPress	unset($normal['dashboard_incoming_links']); //Входящие ссылки//	unset($normal['dashboard_right_now']); //Прямо сейчас//	unset($normal['dashboard_recent_comments']); //Последние комментарии	unset($normal['dashboard_plugins']); //Последние Плагины}include('functions/settings.php');include('functions/metabox_shop.php');//include('functions/metabox_blog_post.php');include('functions/russian-date.php');include('functions/gde_slon_vitrina/vitrina_xml.php');if ( ! function_exists( 'promocode_comment' ) ) :function promocode_comment( $comment, $args, $depth ) {	$GLOBALS['comment'] = $comment;	switch ( $comment->comment_type ) :		case '' :	?>	<li id="li-comment-<?php comment_ID(); ?>" class="comment col-md-6">		<div id="comment-<?php comment_ID(); ?>">				<div class="head-comment">			<div class="comment-author vcard">				<?php //echo get_avatar( $comment, 40 ); 				global $post; $model =  get_post_meta($post->ID, 'wpcf-offers_name', true);?>				<?php printf( __( '%s', 'promocode' ), sprintf( '<span class="name-author">%s</span>', get_comment_author() ) ); ?>			</div><!-- .comment-author .vcard -->			<div class="comment-meta commentmetadata"><?php					/* translators: 1: date, 2: time */					printf( __( '%1$s at %2$s', 'promocode' ), get_comment_date('j F Y'),  get_comment_time() ); ?><?php edit_comment_link( __( '(Edit)', 'promocode' ), ' ' );				?>			</div><!-- .comment-meta .commentmetadata -->			</div>				<?php if ( $comment->comment_approved == '0' ) : ?>			<em class="comment-awaiting-moderation"><?php _e( 'Ваш отзыв ожидает проверки. Вскоре он будет размещен', 'promocode' ); ?></em>			<br />		<?php endif; ?>				<div class="comment-body"><?php comment_text(); ?></div>		<div class="reply">			<?php comment_reply_link( array_merge( $args, array( 'depth' => $depth, 'max_depth' => $args['max_depth'] ) ) ); ?>		</div><!-- .reply -->	</div><!-- #comment-##  -->	<?php			break;		case ''  :		case '' :	?>	<li class="post pingback">	<?php			break;	endswitch;}endif;function catch_that_image() {  global $post, $posts;  $first_img = '';  ob_start();  ob_end_clean();  $output = preg_match_all('/<img.+src=[\'"]([^\'"]+)[\'"].*>/i', $post->post_content, $matches); // выдираем первый имагес  $first_img = $matches [1] [0];  if(empty($first_img)){   $first_img =  "/img/default.jpg";  }  return $first_img;}/*	Подсчитываем просмотры страниц====================================================*/function setPostViews($postID) {    $count_key = 'post_views_count';    $count = get_post_meta($postID, $count_key, true);    if($count==''){        $count = 0;        delete_post_meta($postID, $count_key);        add_post_meta($postID, $count_key, '0');    }else{        $count++;        update_post_meta($postID, $count_key, $count);    }}function getPostViews($postID){    $count_key = 'post_views_count';    $count = get_post_meta($postID, $count_key, true);    if($count==''){        delete_post_meta($postID, $count_key);        add_post_meta($postID, $count_key, '0');        return "0";    }    return $count;}/*	Редактируем RSS ленту====================================================*/function featuredtoRSS($content) {global $post;if ( has_post_thumbnail( $post->ID ) ){$content = '' . get_the_post_thumbnail( $post->ID, 'full', array('class' => 'alignleft' ) ) . '' . $content;}return $content;}add_filter('the_excerpt_rss', 'featuredtoRSS');add_filter('the_content_feed', 'featuredtoRSS');function removeFromFeed($query) {if ($query->is_feed) {$query->set('post_type',array('blog','post', 'product'));}return $query;}add_filter('pre_get_posts','removeFromFeed');function AddToSearch($query) {if ($query->is_search) {	$query->set('post_type',array('blog','post', 'product'));}return $query;}add_filter('pre_get_posts', 'AddToSearch');/* Сжимаем изображения налету=========================================================function WP_img_resize( $url, $width, $height = null, $crop = null, $single = true ) {     if(!$url OR !$width ) return false;     $upload_info = wp_upload_dir();     $upload_dir = $upload_info['basedir'];     $upload_url = $upload_info['baseurl'];     if(strpos( $url, $upload_url ) === false) return false;     $rel_path = str_replace( $upload_url, '', $url);     $img_path = $upload_dir . $rel_path;     if( !file_exists($img_path) OR !getimagesize($img_path) ) return false;     $info = pathinfo($img_path);     $ext = $info['extension'];     list($orig_w,$orig_h) = getimagesize($img_path);     $dims = image_resize_dimensions($orig_w, $orig_h, $width, $height, $crop);     $dst_w = $dims[4];     $dst_h = $dims[5];     $suffix = "{$dst_w}x{$dst_h}";     $dst_rel_path = str_replace( '.'.$ext, '', $rel_path);     $destfilename = "{$upload_dir}{$dst_rel_path}-{$suffix}.{$ext}";     if(!$dst_h) {          $img_url = $url;          $dst_w = $orig_w;          $dst_h = $orig_h;     } elseif(file_exists($destfilename) && getimagesize($destfilename)) {          $img_url = "{$upload_url}{$dst_rel_path}-{$suffix}.{$ext}";     } else {          $resized_img_path = image_resize( $img_path, $width, $height, $crop );          if(!is_wp_error($resized_img_path)) {               $resized_rel_path = str_replace( $upload_dir, '', $resized_img_path);               $img_url = $upload_url . $resized_rel_path;          } else {               return false;          }     }     if($single) {          $image = $img_url;     } else {          $image = array (               0 => $img_url,               1 => $dst_w,               2 => $dst_h          );     }     return $image;}*/function russian_date(){$date=explode(".", date(".m.Y"));switch ($date[1]){case 1: $m='январь'; break;case 2: $m='февраль'; break;case 3: $m='март'; break;case 4: $m='апрель'; break;case 5: $m='май'; break;case 6: $m='июнь'; break;case 7: $m='июль'; break;case 8: $m='август'; break;case 9: $m='сентябрь'; break;case 10: $m='октябрь'; break;case 11: $m='ноябрь'; break;case 12: $m='декабрь'; break;}echo $date[0].'&nbsp;на&nbsp;'.$m.'&nbsp;'.$date[2];}/*	Вставляем комментарии Disqus====================================================*/function disqus_embed($disqus_shortname) {    global $post;    wp_enqueue_script('disqus_embed', 'http://'.$disqus_shortname.'.disqus.com/embed.js');    echo '<div id="disqus_thread"></div>    <script type="text/javascript">        var disqus_shortname = "'.$disqus_shortname.'";        var disqus_title = "'.$post->post_title.'";        var disqus_url = "'.get_permalink($post->ID).'";        var disqus_identifier = "'.$disqus_shortname.'-'.$post->ID.'";    </script>';}/*	Добавляем свои стили и кнопки в редактор====================================================*/function my_mce_styles($buttons){ array_unshift($buttons, 'styleselect'); return $buttons;}add_filter('mce_buttons_2', 'my_mce_styles');function my_style_before_init($init_array) { $init_array['theme_advanced_styles'] = "Кнопка=grbutton"; return $init_array;}add_filter('tiny_mce_before_init', 'my_style_before_init');add_editor_style();/*	Загружаем XML файлы с купонами "Где слон?" для всех постов======================================================================*/function get_xml_cupons_from_gdeslon() {	global $wpdb;	$meta_key = 'wpcf-xml_cupons_gdeslon';	$posts_with_cupons = $wpdb->get_col($wpdb->prepare("SELECT post_id FROM $wpdb->postmeta	WHERE meta_key = %s", $meta_key));			//	var_dump($posts_with_cupons);		foreach($posts_with_cupons as $posts_with_cupon) {			$xml_cupons_gdeslon_url = get_post_meta($posts_with_cupon, 'wpcf-xml_cupons_gdeslon', 1);		if(!empty($xml_cupons_gdeslon_url)) {						$ch = curl_init();						curl_setopt($ch, CURLOPT_URL, $xml_cupons_gdeslon_url);			curl_setopt($ch, CURLOPT_TIMEOUT, 300);			$st = curl_redir_exec($ch);			$st = curl_exec($ch);			$fd = @fopen(TEMPLATEPATH.'/functions/xml_cupons_gdeslon/cupons_gdeslon_'.$posts_with_cupon.'.xml', 'w');			fwrite($fd, $st);			@fclose($fd);			curl_close($ch);						echo 'Загрузили купоны для поста с ID='.$posts_with_cupon.'<br />';					}			}	}    /* Редирект по cURL - необходим для скачивания XML файлов==============================================================*/function curl_redir_exec($ch) {  static $curl_loops = 0;  static $curl_max_loops = 20;  if ($curl_loops >= $curl_max_loops)    {    $curl_loops = 0;    return false;    }  curl_setopt($ch, CURLOPT_HEADER, 0);  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);  $data = curl_exec($ch);  list($header, $data) = explode("\n\n", $data, 2);  $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);    if ($http_code == 301 || $http_code == 302)    {    $matches = array();    preg_match('/Location:(.*?)\n/', $header, $matches);    $url = @parse_url(trim(array_pop($matches)));    if (!$url)      {      $curl_loops = 0;      return $data;      }    $last_url = parse_url(curl_getinfo($ch, CURLINFO_EFFECTIVE_URL));        if (!$url['scheme'])      $url['scheme'] = $last_url['scheme'];    if (!$url['host'])      $url['host'] = $last_url['host'];    if (!$url['path'])      $url['path'] = $last_url['path'];    $new_url = $url['scheme'] . '://' . $url['host'] . $url['path'] . ($url['query']?'?'.$url['query']:'');    echo $new_url.' --- '.$http_code.'<br>';    curl_setopt($ch, CURLOPT_URL, $new_url);    return curl_redir_exec($ch);    }  else    {    $curl_loops = 0;    return $data;    }  }/* функция для Ajax подгрузки купонов===============================================================*/add_action( 'wp_ajax_get_cupons_gdeslon', 'ajax_get_cupons_gdeslon_function' ); // для вошедших в админку пользователейadd_action( 'wp_ajax_nopriv_get_cupons_gdeslon', 'ajax_get_cupons_gdeslon_function' ); // Для не вошедших в админку посетителейfunction ajax_get_cupons_gdeslon_function() {	if ($_POST['post_id']) { 		$post_id = $_POST['post_id'];		$cupon_thumbnail = get_the_post_thumbnail($post_id, 'medium', array('class' => 'img-responsive center-block'));		$xml_cupons_gdeslon_url = get_post_meta($post_id, 'wpcf-xml_cupons_gdeslon', 1);		//$offers_logo = the_post_thumbnail($post_id, 'medium', array('class' => 'img-responsive'));		/* Если имеются купоны от "Где слон?"		==============================*/		if($xml_cupons_gdeslon_url) {			$url = get_template_directory_uri().'/functions/xml_cupons_gdeslon/cupons_gdeslon_'.$post_id.'.xml';						$xml = simplexml_load_file($url);			$xml_coupons_arr = (array)$xml->coupons;					if(is_array($xml_coupons_arr)) {			//	$coupon_str_delivery = array();				// разбираем фид и извлекаем промокоды			$cupons = $xml_coupons_arr['coupon'];			global $wpdb;			foreach ($cupons as $coupon_obj) {				$coupon = (array)$coupon_obj;				if(is_array($coupon)) {					$merchant_id = $coupon['merchant-id'];					$parent_id = $wpdb->get_var("SELECT post_id FROM $wpdb->postmeta  WHERE meta_key = 'wpcf-merchant_id' and meta_value = $merchant_id"); 											$coupon_str_delivery .= '<div class="coupon col-md-4">';						$coupon_str_delivery .= '<div class="coupon_logo"><span class="link" data-href="'.$coupon['url'].'">'.$cupon_thumbnail.'</span></div>';						$coupon_str_delivery .= '<h3>'.$coupon['name'].'</h3>';						$coupon_str_delivery .= '<div class="coupon_description"><p>'.$coupon['description'].'</p></div>';						$coupon_str_delivery .= '<button class="btn btn-warning btn-block  link" data-href="'.$coupon['url'].'">Использовать купон »</button>';						$coupon_str_delivery .= '</div>';										} 					} 						} 		} else {					$offers_id = get_post_meta($post_id, 'wpcf-offers_id', true); // получаем id нужного оффера для нужного поста и подставляем значение в URL				$url = 'http://shopingeconom.ru/wp-content/themes/promocode/functions/xmls/cupons.xml'; // получили URL адрес для скачивания RSS фида с промокодами для нужного арендодателя				$xml = simplexml_load_file($url); // проверяем существование этого фида				// если RSS feed существует, то продолжаем	if($xml) {						// разбираем фид и извлекаем промокоды		$coupon_count=0;		$coupon_str_delivery .= '<div class="row">'; 		foreach ($xml->xpath('coupons/coupon') as $coupon) {			if($coupon) {				if($coupon->advcampaign_id == $offers_id) {					$coupon_count++;						 							$coupon_str_delivery .= '<div class="col-md-4"><div class="coupon white-block p-25 m-0-0-25-0 text-center">';														$coupon_str_delivery .= '<div class="coupon_logo m-0-0-25-0">'.$cupon_thumbnail.'</div>';														$coupon_str_delivery .= '<div class="name m-0-0-25-0">'.$coupon->name.'</div>';														$coupon_str_delivery .= '<button target="_blanck" rel="nofollow" class="btn btn-warning btn-block link" data-href="'.$coupon->gotolink.'">Использовать купон</button>';														//$coupon_str_delivery .= '<div class="coupon_description col-md-9"><p>'.$coupon->description.'</p></div>';														$coupon_str_delivery .= '</div></div>';						if($coupon_count % 3 == 0) { $coupon_str_delivery .= '<div class="clearfix"></div>'; }											} else {					$error = '<div style="text-align: center; width: 100%;padding: 15px;">Извините, промокоды для этого магазина временно отсутствуют</div>';				}				} 							} $coupon_str_delivery .= '</div>';		} else { $error .= 'XML не получен';}				//if ($coupon_str) { echo $coupon_str; } else { echo $error;}			}								} 		echo '<!-- Начинаются вкладки -->	'.$coupon_str_delivery.''; 	exit;}	add_action('wp_enqueue_scripts', 'my_enqueue_scripts' );	function my_enqueue_scripts() {		if(is_singular(array('post', 'discount'))) {		wp_enqueue_script( 'my_script_handle', get_template_directory_uri().'/js/custom_ajax.js', array( 'jquery' ) );		wp_localize_script( 'my_script_handle', 'ajax_get_cupons_gdeslon', array( 'ajax_url' => admin_url('admin-ajax.php')));		}	}/*	Обновляем логотипы рекламодателей Где слон=======================================================*/add_action('wp_ajax_shops_logo_update', 'shops_logo_update_callback');function shops_logo_update_callback() {	global $mytheme;	$url_gs_shops_xml = $mytheme['gdeslon_shops'];		if($url_gs_shops_xml) {		$xml = simplexml_load_file($url_gs_shops_xml);		$xml_shops_arr = (array)$xml->shops;				if(is_array($xml_shops_arr)) {						$shops = $xml_shops_arr['shop'];						foreach ($shops as $shop_obj) {				$shop = (array)$shop_obj;				$shop_logo_url = $shop['logo-file-name'];				$shop_id = $shop['id'];				$shop_name = $shop['name'];				$ch = curl_init();							curl_setopt($ch, CURLOPT_URL, $shop_logo_url);				curl_setopt($ch, CURLOPT_TIMEOUT, 10);				$st = curl_redir_exec($ch);				$st = curl_exec($ch);				$fd = @fopen(TEMPLATEPATH.'/functions/gdeslon_shops_logo/shop_logo_'.$shop_id.'.png', 'w');				fwrite($fd, $st);				@fclose($fd);				curl_close($ch);				sleep(1.2);				echo 'Обновили логотип для '.$shop_name.'<br />';			}		}	}		exit;}function get_shops_for_blog($post_id) {	global $post;		//$best_shops_ids = get_field('best_shops', $post_id, $format_value);	if(is_array($best_shops_ids)) {		echo '<div class="shops col-md-12"><div class="row"><div class="col-md-12"><div class="h2">Надежные Интернет магазины</div></div>';		foreach($best_shops_ids as $num => $best_shops_id) {			$the_title = get_the_title($best_shops_id);			$get_the_post_thumbnail = get_the_post_thumbnail($best_shops_id, 'full');			$get_the_permalink = get_the_permalink($best_shops_id); 			$link = get_post_meta($best_shops_id, 'wpcf-link', 1 );			$sale_link = get_post_meta($best_shops_id, 'wpcf-sale_link', 1);			?>						<div class="col-md-4">				<div class="white-block p-25 ">					<div class="thumbnail center-block">						<?php 												if ($get_the_post_thumbnail) {  ?>							<a href="<?php echo $get_the_permalink; ?>" title="<?php echo $post->title;?>" ><?php echo $get_the_post_thumbnail; ?></a>						<?php }?>												<?php 								if($link) { echo '<span class="goto blue link" data-href="'.$link.'">Официальный сайт</span>';}							if($sale_link) { echo '<span class="sale_link link" data-href="'.$sale_link.'">Распродажа в магазине</span>';}													?>					</div>				</div>			</div>			<?php																										}		echo '</div></div>';	}		/*	//if(empty($post_id)) {$post_id = $post->ID; }	$tags = get_the_tags($post_id);			$tags_slug = array();	foreach($tags as $tag) {		$tags_slug[] = $tag->slug;	}	$tags_string = implode(",", $tags_slug);		if($tags_string != '') {			$args = array(			'post_type' => 'post',			'tag' => $tags_string		);		$shops = get_posts($args);		if($shops) {			echo '<div class="shops white-block"><div class="widget-title large-title">Надежные Интернет магазины</div>';			$count=0;			foreach($shops as $post) { setup_postdata($post); 			$count++;			if($count==2) { $shop_class =' second'; } else { $shop_class =''; }			$link = get_post_meta($post->ID, 'wpcf-link', 1 );			$sale_link = get_post_meta($post->ID, 'wpcf-sale_link', 1); ?>				<div class="thumbnail<?php echo $shop_class;?>">					<?php 					$get_the_post_thumbnail = get_the_post_thumbnail($post->ID, 'full');					$get_the_permalink = get_the_permalink($post->ID);										if (has_post_thumbnail($post->ID)) {  ?>						<a href="<?php echo $get_the_permalink; ?>" title="<?php echo $post->title;?>" ><?php echo $get_the_post_thumbnail; ?></a>					<?php }?>										<?php 							if($link) { echo '<span class="goto blue link" data-href="'.$link.'">Официальный сайт</span>';}						if($sale_link) { echo '<span class="sale_link link" data-href="'.$sale_link.'">Распродажа в магазине</span>';}											?>				</div>	<?php 	if($count==3) { $count=0; }			} wp_reset_postdata();		echo '</div>';		}			}	*/}function related_blog_posts($post_id) {	global $post;	$post_id = $post->ID;	$categories = wp_get_post_tags($post_id);	if ($categories) {		$category_ids = array();		foreach($categories as $individual_category) $category_ids[] = $individual_category->term_id;		$args=array(			'post_type' => 'blog',			'tag__in' => $category_ids,			'posts_per_page'=> 3,			'meta_key' => 'post_views_count',			'orderby' => 'meta_value_num',			'post__not_in' => array($post_id)		);	$crp_related = get_posts($args);		if($crp_related) {			$crp_related_string = null;			$count=0;			echo '<div class="crp_related col-md-12"><div class="m-0-0-45-0"><div class="row"><div class="col-md-12"><div class="h2">Полезно узнать</div></div>';			foreach($crp_related as $post) { $count++; setup_postdata($post); ?>			<div class="col-md-4 text-center">			<div class="thumbnail margin-bottom-0">			<?php 			$thumbnail = get_post_meta($post->ID, 'wpcf-pictures', true );			if (has_post_thumbnail()) { ?>			<a rel="nofollow" href="<?php the_permalink(); ?>" title="<?php the_title_attribute(); ?>" ><?php the_post_thumbnail('large'); ?></a>			<?php } elseif($thumbnail) { ?>			<a rel="nofollow" href="<? the_permalink() ?>"><img alt="<?php the_title_attribute(); ?>" src="<? echo $thumbnail; ?>" /></a>			<? } ?>			</div>			<div class="white-block p-15"><div class="entry-title"><a href="<?php the_permalink(); ?>" title="<?php the_title(); ?>" ><? the_title(); ?></a></div></div>										</div>		<?php	if($count % 3 == 0) { echo '<div class="clearfix"></div>'; } 		}		echo '</div></div></div>';			wp_reset_postdata();		}	}		if($crp_related_string) { echo '<div class="widget broun"><div class="h2 widget-title">Смотрите еще</div><ul>'.$crp_related_string.'</ul></div>';}	   }/*	Редактируем профиль пользователя========================================*///Изменение контактовadd_filter('user_contactmethods', 'my_user_contactmethods');function my_user_contactmethods($user_contactmethods){	unset($user_contactmethods['jabber']);	unset($user_contactmethods['yim']);	unset($user_contactmethods['aim']);	$user_contactmethods['vkontakte'] = '<b>ВКонтакте</b>'; 	return $user_contactmethods;}/*	jQuery Клик по партнерской ссылке=================================================================*/add_action('wp_ajax_partner_link', 'partner_link_callback');add_action('wp_ajax_nopriv_partner_link', 'partner_link_callback');function partner_link_callback() {	if($_POST['action'] = 'partner_link' ) {				$href = $_POST['href'];							if(go_to_partner_link($_POST['href1'], $href) === true) {				echo $_POST['href1']; 			} elseif(go_to_partner_link($_POST['href2'], $href) === true) {				echo $_POST['href2'];			} elseif(go_to_partner_link($_POST['href3'], $href) === true) {				echo $_POST['href3'];			} else {				echo $_POST['href'];			}					//	var_dump(go_to_partner_link($_POST['href2'], $href));				}	exit;}/*	Адаптивное меню====================================*/if( !class_exists('SWH_Walker_Nav_Menu') ){	class SWH_Walker_Nav_Menu extends Walker_Nav_Menu {		function start_lvl(&$output, $depth = 0, $args = array()) {			$output .= "\n<ul class=\"dropdown-menu\">\n";		}		function start_el(&$output, $item, $depth = 0, $args = array(), $id = 0) {			$item_html = '';			parent::start_el($item_html, $item, $depth, $args);			if ( $item->is_dropdown && $depth === 0 ) {				$item_html = str_replace( '<a', '<a class="dropdown-toggle" data-toggle="dropdown"', $item_html );				//$item_html = str_replace( '<a', '<a', $item_html );				$item_html = str_replace( '</a>', ' <b class="caret"></b></a>', $item_html );			}			$output .= $item_html;		}		function display_element($element, &$children_elements, $max_depth, $depth = 0, $args, &$output) {			if ( $element->current )				$element->classes[] = 'active';			$element->is_dropdown = !empty( $children_elements[$element->ID] );			if ( $element->is_dropdown ) {				if ( $depth === 0 ) {					$element->classes[] = 'dropdown';				} elseif ( $depth === 1 ) {					// Extra level of dropdown menu,					// as seen in http://twitter.github.com/bootstrap/components.html#dropdowns					$element->classes[] = 'dropdown-submenu';				}			}			parent::display_element($element, $children_elements, $max_depth, $depth, $args, $output);		}	}}function get_catalog_category($termID) {		if(empty($termID)) {		$taxonomy = 'category';		$args = array(		   'parent' => 0,		   'hide_empty' => 0,		   'taxonomy' => $taxonomy		);				$categories = get_categories($args); // получаем все категории в виде массива				$term_array = null;		foreach ($categories as $category) {			$term_litle_name = null; $term_id = null; $term_taxonomy_link = null; $term_name = null;						$term_id = $category->term_id;			$term_litle_name = get_option('category_'.$term_id.'_litle_name_category');			if($term_litle_name) { $term_name = $term_litle_name; } else { $term_name = $category->name; }			$term_taxonomy_link = get_term_link((int)$term_id, $taxonomy );   			$term_array[$term_name] = $term_taxonomy_link;						/*			$term_array[$term_name] = array(				'name' => $term_name,				'link' => $term_taxonomy_link			);			*/					}			} 	$term_taxonomy_string = '<div id="all_categories" class="product_cat-list clearfix"><div class="h3">Все категории Интернет магазинов</div>';	$term_taxonomy_string .= '<ul class="col-md-4">';	$count=0;		ksort($term_array);		foreach($term_array as $name => $link) { $count++;		$term_taxonomy_string .= '<li><a rel="nofollow" href="'.$link.'">'.$name.'</a></li>';		if($count % 4 == 0) { $term_taxonomy_string .= '</ul>'; }		if($count % 12 == 0) { $term_taxonomy_string .= '<div class="clearfix"></div>'; }		if($count % 4 == 0) { $term_taxonomy_string .= '<ul class="col-md-4">'; }	}	$term_taxonomy_string .= '</ul>';	$term_taxonomy_string .= '</div>';	echo $term_taxonomy_string;}/*	Каталог популярных категорий================================================*/function get_popular_catalog_category() {			$taxonomy = 'shop_category';		$args = array(		   'parent' => 0,		   'hide_empty' => 0,		   'taxonomy' => $taxonomy		);				$categories = get_categories($args); // получаем все категории в виде массива		$images_raw  = get_option( 'taxonomy_image_plugin' );				$popular_categoryes_string = null;		$popular_categoryes_string = '<div class="row popular_category_list"><div class="h2 col-md-12">Популярные категории</div><div class="col-md-12">';		foreach ($categories as $category) {			$term_litle_name = null; $term_id = null; $term_taxonomy_link = null; $term_name = null; 						$term_id = $category->term_id;						$popular_category = get_option('category_'.$term_id.'_popular_cat');							$term_taxonomy_id = $category->term_taxonomy_id; // узнаем ID категории				$term_taxonomy_image_src = wp_get_attachment_image_src( $images_raw[ $term_taxonomy_id ], 'full' ); 				$term_taxonomy_image = '<img class="img-responsive m-0-0-25-0" src="'.$term_taxonomy_image_src[0].'">';				$term_litle_name = get_option('category_'.$term_id.'_litle_name_category');				if($term_litle_name) { $term_name = $term_litle_name; } else { $term_name = $category->name; }				$term_taxonomy_link = get_term_link((int)$term_id, $taxonomy );   								$popular_categoryes_string .= '<div class="pull-left purpur-block p-15 link margin-right-15 margin-bottom-15" data-href="'.$term_taxonomy_link.'"><a href="'.$term_taxonomy_link.'">'.$term_name.'</a></div>';					}		$popular_categoryes_string .= '</div></div>';		echo $popular_categoryes_string;}function get_code_link($url) {	if($url) {				var_dump(get_headers($url, 1));					}	}